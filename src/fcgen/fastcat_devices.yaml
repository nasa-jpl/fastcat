# use snake_case for all variable and device names
# if a config variable has a default value, it is assumed to be optional
# all parameters must have a default value 
devices:
  - name: commander
    type: fastcat_device
    state:
    - name: enable
      type: bool
      comment: "If true, commander will emit fastcat commands"
    config:
    - name: start_enabled  
      type: bool
      comment: "If true, starts issuing commands immediately after initialization"
    - name: skip_n_loops
      type: uint16_t 
      comment: "The number of loops between issuing commands when enabled"
    - name: device_command_name
      type: std::string
      comment: "The name of the device commander sends commands"
    - name: device_cmd_type 
      type: DeviceCmdType
      comment: "The command type to send to device_command_name"

  - name: conditional
    type: fastcat_device
    state:
    - name: output
      type: bool
      config: "bool output = (double)signal_value <COMPARE_OPERATOR> (double)compare_rhs_value"
    config:
    - name: conditional_type
      type: ConditionalOperatorType
      comment: "Comparison operator valid inputs: {<, <=, >, >=, ==, !=}"
    - name: compare_rhs_value
      type: double
      comment: "The right-hand side value of the comparison test"

  - name: faulter
    type: fastcat_device
    state:
    - name: enable
      type: bool
      comment: "If true, the faulter is currently monitoring the fastcat signal for faults"
    - name: fault_active
      type: bool
      comment: "If true, the conditions for raising a fault are met"
    config:
    - name: start_enabled
      type: bool
      comment: "If true, starts monitoring the input signal immediately after initialization"


  - name: filter
    type: fastcat_device
    state:
    - name: output
      type: double
      comment: "Filtered output value"
    config:
    - name: filter_type
      type: FilterType
      comment: "The type of filter"
    - name: A
      type: std::vector<double>
      default: {0}
      comment: "Digital-AB: The A coefficients"
    - name: B
      type: std::vector<double>
      default: {0}
      comment: "Digital-AB: The B coefficients"
    - name: buffer_size
      type: uint16_t
      default: 1
      comment: "Moving-average: The number of samples which to average over"

  - name: fts
    type: fastcat_device
    state:
    - name: raw_fx
      type: double
    - name: raw_fy
      type: double
    - name: raw_fz
      type: double
    - name: raw_tx
      type: double
    - name: raw_ty
      type: double
    - name: raw_tz
      type: double
    - name: tared_fx
      type: double
    - name: tared_fy
      type: double
    - name: tared_fz
      type: double
    - name: tared_tx
      type: double
    - name: tared_ty
      type: double
    - name: tared_tz
      type: double
    config: 
    - name: calibration_matrix
      type: std::vector<double> 
      comment: "Must be NxN elements long arranged row-wise, where N is the number of input signals (N=6 typically)"
    parameters:
    - name: max_force_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_torque_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"

  - name: function
    type: fastcat_device
    state:
    - name: output
      type: double
    config: 
    - name: function_type
      type: FunctionType
    - name: poly_order
      type: uint8_t
      default: 0
      comment: "Polynomial: Order of polynominal"
    - name: poly_coefficients
      type: std::vector<double>
      default: {0}
      comment: "Polynomial: Order of polynominal"
    - name: power_exponent
      type: double
      default: 0
      comment: "Power: the constant power term i.e input^power_exponent"
    - name: exponential_base
      type: double
      default: e
      comment: "Exponential: the base term i.e.  exponential_base^input"

  - name: linear_interpolation
    type: fastcat_device
    state:
    - name: output
      type: double
    - name: is_saturated
      type: bool
    config:
    - name: domain
      type: std::vector<double>
      comment: "Variable-length domain of linear interpolation table. Must match length of range"
    - name: range
      type: std::vector<double>
      comment: "Variable-length range of linear interpolation table. Must match length of domain"
    - name: enable_output_bounds_fault
      type: bool
      default: true
      comment: "If true, emits a fault if the input signal lies outside the (min,max) of the domain"

  - name: pid
    type: fastcat_device
    state:
    - name: active
      type: bool
    - name: output
      type: double
    - name: kp_term
      type: double
    - name: ki_term
      type: double
    - name: kd_term
      type: double
    config:
    - name: kp
      type: double
      comment: "Proportional Gain"
    - name: ki
      type: double
      comment: "Integral Gain"
    - name: kd
      type: double
      comment: "Derivative Gain"
    - name: windup_limit
      type: double
      comment: "The Max contribution of the integral term i.e. (ki*error)"

  - name: saturation
    type: fastcat_device
    state:
    - name: output
      type: double
    config:
    - name: lower_limit
      type: double
      comment: "Lower clipping value"
    - name: upper_limit
      type: double
      comment: "Upper clipping value"

  - name: schmitt_trigger
    type: fastcat_device
    state:
    - name: output
      type: bool
    config:
    - name: low_threshold
      type: double
      comment: "Lower threshold for turning output on"
    - name: high_threshold
      type: double
      comment: "Upper threshold for turning output off"

  - name: signal_generator
    type: fastcat_device
    state:
    - name: output
      type: double
    config:
    - name: signal_generator_type
      type: SignalGeneratorType
      comment: "Controls which type of generator to use to create periodic output signal"
    - name: sine_wave_angular_frequency
      type: double
      default: 0
    - name: sine_wave_phase
      type: double
      default: 0
    - name: sine_wave_offset
      type: double
      default: 0
    - name: saw_tooth_max
      type: double
      default: 0
    - name: saw_tooth_min
      type: double
      default: 0
    - name: saw_tooth_slope
      type: double
      default: 0
    - name: gaussian_random_mean
      type: double
      default: 0
    - name: gaussian_random_sigma
      type: double
      default: 0
    - name: gaussian_random_seed
      type: uint32_t
      default: 1
    - name: uniform_random_max
      type: double
      default: 0
    - name: uniform_random_min
      type: double
      default: 0
    - name: uniform_random_seed
      type: uint32_t
      default: 1

  - name: virtual_fts
    type: fastcat_device
    state:
    - name: raw_fx
      type: double
    - name: raw_fy
      type: double
    - name: raw_fz
      type: double
    - name: raw_tx
      type: double
    - name: raw_ty
      type: double
    - name: raw_tz
      type: double
    - name: tared_fx
      type: double
    - name: tared_fy
      type: double
    - name: tared_fz
      type: double
    - name: tared_tx
      type: double
    - name: tared_ty
      type: double
    - name: tared_tz
      type: double
    config: 
    - name: calibration_matrix
      type: std::vector<double> 
      comment: "Must be 6xN elements long arranged row-wise, where N is the number of input signals (N=6 typically)"
    - name: position
      type: std::array<double,3>
      comment: "Translation of the original sensor to this virtual sensor"
    - name: quaternion
      type: std::array<double,4>
      default: [NAN, NAN, NAN, NAN]
      comment: "The preferred method for specifying orientation from real to virtual fts in [u,x,y,z] order"
    - name: euler
      type: std::array<double,3>
      default: [NAN, NAN, NAN]
      comment: "The secondary method for specifying orientation from real to virtual fts in [roll, pitch, yaw] 
                order but computed in the standard absolute Z-Y-X order"
    parameters:
    - name: max_force_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_torque_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"


  - name: ati_fts
    type: jsd_device
    state:
    - name: raw_fx
      type: double
    - name: raw_fy
      type: double
    - name: raw_fz
      type: double
    - name: raw_tx
      type: double
    - name: raw_ty
      type: double
    - name: raw_tz
      type: double
    - name: tared_fx
      type: double
    - name: tared_fy
      type: double
    - name: tared_fz
      type: double
    - name: tared_tx
      type: double
    - name: tared_ty
      type: double
    - name: tared_tz
      type: double
    config: 
    - name: max_force_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_force_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value force above which a fault will be raised"
    - name: max_torque_x
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_y
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"
    - name: max_torque_z
      type: double
      default: 1.0e-6
      comment: "Absolute-value torque above which a fault will be raised"

  - name: gold_actuator
    type: jsd_device
    state:
    - name: actual_position
      type: double
    - name: actual_velocity
      type: double
    - name: actual_current
      type: double
    - name: faulted
      type: bool
    - name: cmd_position
      type: double
    - name: cmd_velocity
      type: double
    - name: cmd_current
      type: double
    - name: cmd_max_current
      type: double
    - name: elmo_state_machine_state
      type: uint32_t
      comment: "From jsd_elmo_state_machine_state_t"
    - name: elmo_mode_of_operation
      type: uint32_t
      comment: "From jsd_elmo_mode_of_operation_t"
    - name: sto_engaged
      type: uint8_t
    - name: hall_state
      type: uint8_t
    - name: target_reached
      type: uint8_t
    - name: motor_on
      type: uint8_t
    - name: servo_enabled
      type: uint8_t
    - name: jsd_fault_code
      type: uint32_t
      comment: "From jsd_elmo_fault_code_t"
    - name: fastcat_fault_code
      type: uint32_t
    - name: emcy_error_code
      type: uint16_t 
    - name: bus_voltage
      type: double
    - name: drive_temperature
      type: uint32_t
    - name: elmo_actual_position
      type: int32_t
    - name: elmo_cmd_position
      type: int32_t
    - name: actuator_state_machine_state
      type: uint32_t
      comment: "From jsd_elmo_State_machine_state_t"
    - name: power
      type: double

  - name: platinum_actuator
    type: jsd_device
    state:
    - name: actual_position
      type: double
    - name: actual_velocity
      type: double
    - name: actual_current
      type: double
    - name: faulted
      type: bool
    - name: cmd_position
      type: double
    - name: cmd_velocity
      type: double
    - name: cmd_current
      type: double
    - name: cmd_prof_velocity
      type: double
      comment: "Commanded velocity in Position Profiled mode."
    - name: cmd_prof_end_velocity
      type: double
      comment: "Commanded end velocity in Position Profiled mode."
    - name: cmd_prof_accel
      type: double
      comment: "Commanded acceleration/deceleration in Position and Velocity Profiled modes."
    - name: cmd_max_current
      type: double
    - name: elmo_state_machine_state
      type: uint32_t
      comment: "From jsd_elmo_state_machine_state_t"
    - name: elmo_mode_of_operation
      type: uint32_t
      comment: "From jsd_epd_mode_of_operation_t"
    - name: sto_engaged
      type: uint8_t
    - name: hall_state
      type: uint8_t
    - name: target_reached
      type: uint8_t
    - name: setpoint_ack_rise
      type: bool
    - name: motor_on
      type: uint8_t
    - name: servo_enabled
      type: uint8_t
    - name: jsd_fault_code
      type: uint32_t
      comment: "From jsd_epd_fault_code_t"
    - name: fastcat_fault_code
      type: uint32_t
    - name: emcy_error_code
      type: uint16_t
    - name: bus_voltage
      type: double
    - name: drive_temperature
      type: double
    - name: elmo_actual_position
      type: int32_t
    - name: elmo_cmd_position
      type: int32_t
    - name: actuator_state_machine_state
      type: uint32_t
    - name: power
      type: double


  - name: egd
    type: jsd_device
    state:
    - name: actual_position
      type: int32_t
    - name: actual_velocity
      type: int32_t
    - name: actual_current
      type: double
    - name: faulted
      type: bool
    - name: cmd_position
      type: int32_t
    - name: cmd_velocity
      type: int32_t
    - name: cmd_current
      type: double
    - name: cmd_max_current
      type: double
    - name: cmd_ff_position
      type: int32_t
    - name: cmd_ff_velocity
      type: int32_t
    - name: cmd_ff_current
      type: double
    - name: actual_state_machine_state
      type: uint32_t
      comment: "From jsd_egd_state_machine_state_t"
    - name: actual_mode_of_operation
      type: uint32_t
      comment: "From jsd_egd_mode_of_operation_t"
    - name: sto_engaged
      type: uint8_t
    - name: hall_state
      type: uint8_t
    - name: in_motion
      type: uint8_t
    - name: warning
      type: uint8_t
    - name: target_reached
      type: uint8_t
    - name: motor_on
      type: uint8_t
    - name: servo_enabled
      type: uint8_t
    - name: fault_code
      type: uint32_t
      comment: "From jsd_egd_fault_code_t"
    - name: emcy_error_code
      type: uint16_t 
    - name: bus_voltage
      type: double
    - name: analog_input_voltage
      type: double
    - name: digital_input_ch1
      type: uint8_t
    - name: digital_input_ch2
      type: uint8_t
    - name: digital_input_ch3
      type: uint8_t
    - name: digital_input_ch4
      type: uint8_t
    - name: digital_input_ch5
      type: uint8_t
    - name: digital_input_ch6
      type: uint8_t
    - name: digital_output_cmd_ch1
      type: uint8_t
    - name: digital_output_cmd_ch2
      type: uint8_t
    - name: digital_output_cmd_ch3
      type: uint8_t
    - name: digital_output_cmd_ch4
      type: uint8_t
    - name: digital_output_cmd_ch5
      type: uint8_t
    - name: digital_output_cmd_ch6
      type: uint8_t
    - name: drive_temperature
      type: uint32_t

  - name: el3602
    type: jsd_device
    state:
    - name: voltage_ch1
      type: double
    - name: adc_value_ch1
      type: int32_t
    - name: voltage_ch2
      type: double
    - name: adc_value_ch2
      type: int32_t
    config:
    - name: range
      type: El3602Range
    - name: filter
      type: BeckhoffFilter
      default: BECKHOFF_FILTER_30000HZ
    - name: limit1_enable
      type: std::array<bool, JSD_EL3602_NUM_CHANNELS>
      default: {false, false}
    - name: limit1_voltage
      type: std::array<double, JSD_EL3602_NUM_CHANNELS>
      default: {0, 0}
    - name: limit2_enable
      type: std::array<bool, JSD_EL3602_NUM_CHANNELS>
      default: {false, false}
    - name: limit2_voltage
      type: std::array<double, JSD_EL3602_NUM_CHANNELS>
      default: {0, 0}
      

  - name: el2124
    type: jsd_device
    state:
    - name: level_ch1
      type: uint8_t
    - name: level_ch2
      type: uint8_t
    - name: level_ch3
      type: uint8_t
    - name: level_ch4
      type: uint8_t

  - name: el4102
    type: jsd_device
    state:
    - name: voltage_output_ch1
      type: double
    - name: voltage_output_ch2
      type: double

  - name: el3208
    type: jsd_device
    config:
    - name: element
      type: std::array<El3208Element, JSD_EL3208_NUM_CHANNELS>
    - name: filter
      type: std::array<BeckhoffFilter, JSD_EL3208_NUM_CHANNELS>
      default: {BECKHOFF_FILTER_30000HZ}
    - name: connection
      type: std::array<El3208Connection, JSD_EL3208_NUM_CHANNELS>
    - name: wire_resistance
      type: std:array<double, JSD_EL3208_NUM_CHANNELS>
    - name: presentation
      type: std:array<El3208Presentation, JSD_EL3208_NUM_CHANNELS>
      default: {EL3208_PRESENTATION_SIGNED} 
    state:
    - name: output_ch1
      type: double
    - name: adc_value_ch1
      type: int16_t
    - name: output_ch2
      type: double
    - name: adc_value_ch2
      type: int16_t
    - name: output_ch3
      type: double
    - name: adc_value_ch3
      type: int16_t
    - name: output_ch4
      type: double
    - name: adc_value_ch4
      type: int16_t
    - name: output_ch5
      type: double
    - name: adc_value_ch5
      type: int16_t
    - name: output_ch6
      type: double
    - name: adc_value_ch6
      type: int16_t
    - name: output_ch7
      type: double
    - name: adc_value_ch7
      type: int16_t
    - name: output_ch8
      type: double
    - name: adc_value_ch8
      type: int16_t

  - name: el3162
    type: jsd_device
    state:
      - name: voltage_ch1
        type: double
      - name: adc_value_ch1
        type: int16_t
      - name: voltage_ch2
        type: double
      - name: adc_value_ch2
        type: int16_t

  - name: el3104
    type: jsd_device
    state:
      - name: voltage_ch1
        type: double
      - name: adc_value_ch1
        type: int16_t
      - name: voltage_ch2
        type: double
      - name: adc_value_ch2
        type: int16_t
      - name: voltage_ch3
        type: double
      - name: adc_value_ch3
        type: int16_t
      - name: voltage_ch4
        type: double
      - name: adc_value_ch4
        type: int16_t

  - name: el3202
    type: jsd_device
    config:
      - name: element
        type: std::array<El3202Element, JSD_EL3202_NUM_CHANNELS>
      - name: filter
        type: std::array<BeckhoffFilter, JSD_EL3202_NUM_CHANNELS>
        default: {BECKHOFF_FILTER_30000HZ}
      - name: connection
        type: std::array<El3208Connection, JSD_EL3202_NUM_CHANNELS>
      - name: wire_resistance
        type: std:array<double, JSD_EL3202_NUM_CHANNELS>
      - name: presentation
        type: std:array<El3202Presentation, JSD_EL3202_NUM_CHANNELS>
        default: {EL3202_PRESENTATION_SIGNED}
    state:
      - name: output_eu_ch1
        type: double
      - name: adc_value_ch1
        type: int16_t
      - name: output_eu_ch2
        type: double
      - name: adc_value_ch2
        type: int16_t

  - name: el3318
    type: jsd_device
      config:
      - name: element
        type: std::array<El3318Element, JSD_EL3318_NUM_CHANNELS>
      - name: filter
        type: std::array<BeckhoffFilter, JSD_EL3318_NUM_CHANNELS>
        default: {BECKHOFF_FILTER_30000HZ}
      - name: presentation
        type: std:array<El3318Presentation, JSD_EL3318_NUM_CHANNELS>
        default: {EL3318_PRESENTATION_SIGNED}
    state:
      - name: output_eu_ch1
        type: double
      - name: adc_value_ch1
        type: int16_t
      - name: output_eu_ch2
        type: double
      - name: adc_value_ch2
        type: int16_t
      - name: output_eu_ch3
        type: double
      - name: adc_value_ch3
        type: int16_t
      - name: output_eu_ch4
        type: double
      - name: adc_value_ch4
        type: int16_t
      - name: output_eu_ch5
        type: double
      - name: adc_value_ch5
        type: int16_t
      - name: output_eu_ch6
        type: double
      - name: adc_value_ch6
        type: int16_t
      - name: output_eu_ch7
        type: double
      - name: adc_value_ch7
        type: int16_t
      - name: output_eu_ch8
        type: double
      - name: adc_value_ch8
        type: int16_t

  - name: ild1900
    type: jsd_device
    config:
    - name: measuring_rate
      type: double
    - name: averaging_number
      type: uint32_t
    - name: averaging_type
      type: Ild1900Averaging
    - name: model 
      type: Ild1900Model
    - name: exposure_mode
      type: Ild1900ExposureMode
      default: ILD1900_EXPOSURE_MODE_STANDARD
    - name: peak_selection
      type: Ild1900PeakSelection
      default: ILD1900_PEAK_SELECTION_HIGHEST
    state:
    - name: distance_m
      type: double
    - name: intensity
      type: double
    - name: distance_raw
      type: uint32_t
    - name: timestamp_us
      type: uint32_t
    - name: counter
      type: uint32_t
    - name: error
      type: uint8_t
